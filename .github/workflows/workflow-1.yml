name: Build, test and publish Docker image

on:
  push:
    branches:
      - master


# Set environment variables for pushing Docker image to GitHub Container Registry
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  # Build jar, run unit tests and upload jar as artifact
  build:
    runs-on: ubuntu-latest

    #Set up MySQL services:
    services:
      MysqlDB:
        image: mysql/mysql-server:8.0.25
        env:
          MYSQL_ROOT_PASSWORD: rootpw123
          MYSQL_DATABASE: birdwatchdb
          MYSQL_USER: birduser
          MYSQL_PASSWORD: birdpassword
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3



    steps:

      # Checks-out the repository
      - uses: actions/checkout@v3

      # Cache the gradle dependencies and wrapper to speed up the build
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      # Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Run build and run unit tests
      - name: Run build
        run: ./gradlew build
        env:
          MYSQL_HOST: MysqlDB
          SPRING_DATASOURCE_URL: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:birdwatchdb}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
          SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:birduser}
          SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:birdpassword}

      # Upload artifact to use in the next job
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: jar
          path: build/libs/ciditest.jar